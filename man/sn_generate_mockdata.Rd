% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mockdata.R
\name{sn_generate_mockdata}
\alias{sn_generate_mockdata}
\title{Generate Mock Data Files}
\usage{
sn_generate_mockdata(
  datatype,
  output_file = NULL,
  size = "minimal",
  n_records = NULL,
  seed = 123,
  compress = NULL,
  ...
)
}
\arguments{
\item{datatype}{Character. The type of file to generate (from datatypes.yaml).}

\item{output_file}{Character. Path where the generated file should be saved.
If NULL, a temporary file will be created in tempdir().}

\item{size}{Character. Size category: "minimal" (default), "small", "medium", "large".
Ignored if n_records is specified.}

\item{n_records}{Integer. Number of records to generate (overrides size if specified).}

\item{seed}{Integer. Random seed for reproducible generation (default: 123).}

\item{compress}{Logical. Whether to compress output files (default: auto-detected from extension).
For fastq files, compression is enabled by default. For fasta and gtf files, compression is disabled by default.}

\item{...}{Additional datatype-specific options. Use `sn_mockdata_options()` to see available options.
For FASTQ files, common options include:
- `read_length`: Read length (50, 75, 100, 150, 250, 300, or "short"/"medium"/"long"/"extra_long"/"ultra_long")
- `read_type`: "single", "R1", "R2" (affects filename when auto-generating)
- `adapters`: "none", "illumina", "nextera", or TRUE/FALSE
- `adapter_contamination_rate`: Fraction of reads with adapters (0-1)
- `min_quality`, `max_quality`: Quality score range
- `error_rate`: Sequencing error rate (0-1)}
}
\value{
Character. Path to the generated file (invisibly).
}
\description{
Generate mock biological data files based on specified datatypes and parameters.
This function creates realistic but minimal test files for bioinformatics workflows
without requiring large example datasets in the package.
}
\details{
The function supports generating mock files for all datatypes defined in the
global datatypes.yaml configuration. Common supported datatypes include:

**Sequence Files:**
- `fastq`: Raw sequencing reads with quality scores and adapters
- `fasta`: Nucleotide or protein sequences (properly formatted with line breaks)

**Alignment Files:**
- `sam`: Sequence alignment (text format)
- `bam`: Binary alignment (requires samtools for realistic headers)

**Annotation Files:**
- `gtf`: Gene annotation in GTF format
- `gff`: Gene annotation in GFF format
- `bed`: Genomic intervals in BED format

**Variant Files:**
- `vcf`: Variant calls in VCF format

**Data Tables:**
- `csv`, `tsv`, `txt`: Tabular data files
- `json`: JSON structured data
- `yaml`: YAML configuration files

**Realistic Data Generation:**
The function automatically ensures that related biological files use consistent
reference information:
- FASTQ reads include realistic error rates and adapters
- GTF/GFF annotations use matching chromosome names with the reference
- VCF/SAM files reference the same genome coordinates
- Multiple genes per chromosome for realistic annotations
}
\examples{
\dontrun{
# Generate minimal mock files
sn_generate_mockdata("fasta", "test_genome.fa")
sn_generate_mockdata("fastq", "test_reads.fastq", size = "small")
sn_generate_mockdata("gtf", "test_annotation.gtf", n_records = 100)

# Generate temporary files with automatic R1/R2 naming
temp_r1 <- sn_generate_mockdata("fastq", read_type = "R1", size = "small")
temp_r2 <- sn_generate_mockdata("fastq", read_type = "R2", size = "small")

# Generate compressed files (auto-detected or explicit)
sn_generate_mockdata("fastq", "reads.fastq.gz") # Auto-compressed
sn_generate_mockdata("vcf", "variants.vcf", compress = TRUE)

# Generate FASTQ with specific options
sn_generate_mockdata("fastq", "reads_150bp.fastq.gz",
  read_length = 150, adapters = "illumina",
  adapter_contamination_rate = 0.1, min_quality = 30
)

# Generate FASTQ with shortcuts
sn_generate_mockdata("fastq", "short_reads.fq.gz", read_length = "short") # 50bp
sn_generate_mockdata("fastq", "long_reads.fq.gz", read_length = "extra_long") # 250bp

# Generate FASTQ without adapters (clean reads)
sn_generate_mockdata("fastq", "clean_reads.fq.gz", adapters = "none")

# See available options for each datatype
sn_mockdata_options("fastq")
}
}
\seealso{
Other mock data generation: 
\code{\link{sn_cleanup_mockdata_examples}()},
\code{\link{sn_generate_mockdata_batch}()},
\code{\link{sn_generate_rnaseq_dataset}()},
\code{\link{sn_get_example_value_with_mockdata}()},
\code{\link{sn_mockdata_options}()}
}
\concept{mock data generation}
